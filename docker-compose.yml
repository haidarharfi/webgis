services:
  # PHP Service
  app:
    build:
      args:
        # uid: 1001
        WWWGROUP: '${WWWGROUP}'
      context: .
      dockerfile: Dockerfile
    container_name: maping-app
    restart: unless-stopped
    tty: true
    ports:
      - "9001:9000"
    environment:
      SERVICE_NAME: 'app'
      SERVICE_TAGS: 'dev'
      # WWWUSER: '${WWWUSER}'
    working_dir: '/var/www/'
    volumes:
      - './:/var/www'
      - './.docker/php/local.ini:/user/local/etc/php/conf.d/local.ini'
    networks:
      - maping-network
    depends_on:
      - db

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: maping-db
    restart: unless-stopped
    tty: true
    ports:
      # - '3309:3306'
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      SERVICE_NAME: mysql
      SERVICE_TAGS: dev
    volumes:
      - 'dbdata:/var/lib/mysql'
      - './.docker/mysql/my.cnf:/etc/mysql/my.cnf'
    networks:
      - maping-network
    healthcheck:
      test:
          - CMD
          - mysqladmin
          - ping
          - '-p${DB_PASSWORD}'
      retries: 3
      timeout: 5s

  # NGINX Service
  webserver:
    image: nginx:alpine
    container_name: maping-webserver
    restart: unless-stopped
    tty: true
    ports:
      - '${APP_PORT:-80}:80'
      # - "443:443"
    volumes:
      - ./:/var/www
      - ./.docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - maping-network
    depends_on:
      - app

# Docker Networks
networks:
  maping-network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
